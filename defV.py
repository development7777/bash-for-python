"""
    Bash for Python v1.0.0
    This project under MIT License.
    more info:README.md

    This is the main file of the project.
"""

VERSION_MSG = "bash --version\nGNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)\nCopyright (C) 2020 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n\nThis is free software; you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nBash for Python, version 1.0.0\nThis project under MIT License.\nmore info:README.md\n"
CMD_HELP_MSG = "bash -c help\nGNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu)\nThese shell commands are defined internally.  Type `help' to see this list.\nType `help name' to find out more about the function `name'.\nUse `info bash' to find out more about the shell in general.\nUse `man -k' or `info' to find out more about commands not in this list.\n\nA star (*) next to a name means that the command is disabled.\n\n job_spec [&]                                                              history [-c] [-d offset] [n] or history -anrw [filename] or history -p>\n (( expression ))                                                          if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ els>\n . filename [arguments]                                                    jobs [-lnprs] [jobspec ...] or jobs -x command [args]\n :                                                                         kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l >\n [ arg... ]                                                                let arg [arg ...]\n [[ expression ]]                                                          local [option] name[=value] ...\n alias [-p] [name[=value] ... ]                                            logout [n]\n bg [job_spec ...]                                                         mapfile [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C >\n bind [-lpsvPSVX] [-m keymap] [-f filename] [-q name] [-u name] [-r keys>  popd [-n] [+N | -N]\n break [n]                                                                 printf [-v var] format [arguments]\n builtin [shell-builtin [arg ...]]                                         pushd [-n] [+N | -N | dir]\n caller [expr]                                                             pwd [-LP]\n case WORD in [PATTERN [| PATTERN]...) COMMANDS ;;]... esac                read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [->\n cd [-L|[-P [-e]] [-@]] [dir]                                              readarray [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [->\n command [-pVv] command [arg ...]                                          readonly [-aAf] [name[=value] ...] or readonly -p\n compgen [-abcdefgjksuv] [-o option] [-A action] [-G globpat] [-W wordli>  return [n]\n complete [-abcdefgjksuv] [-pr] [-DEI] [-o option] [-A action] [-G globp>  select NAME [in WORDS ... ;] do COMMANDS; done\n compopt [-o|+o option] [-DEI] [name ...]                                  set [-abefhkmnptuvxBCHP] [-o option-name] [--] [arg ...]\n continue [n]                                                              shift [n]\n coproc [NAME] command [redirections]                                      shopt [-pqsu] [-o] [optname ...]\n declare [-aAfFgiIlnrtux] [-p] [name[=value] ...]                          source filename [arguments]\n dirs [-clpv] [+N] [-N]                                                    suspend [-f]\n disown [-h] [-ar] [jobspec ... | pid ...]                                 test [expr]\n echo [-neE] [arg ...]                                                     time [-p] pipeline\n enable [-a] [-dnps] [-f filename] [name ...]                              times\n eval [arg ...]                                                            trap [-lp] [[arg] signal_spec ...]\n exec [-cl] [-a name] [command [argument ...]] [redirection ...]           true\n exit [n]                                                                  type [-afptP] name [name ...]\n export [-fn] [name[=value] ...] or export -p                              typeset [-aAfFgiIlnrtux] [-p] name[=value] ...\n false                                                                     ulimit [-SHabcdefiklmnpqrstuvxPT] [limit]\n fc [-e ename] [-lnr] [first] [last] or fc -s [pat=rep] [command]          umask [-p] [-S] [mode]\n fg [job_spec]                                                             unalias [-a] name [name ...]\n for NAME [in WORDS ... ] ; do COMMANDS; done                              unset [-f] [-v] [-n] [name ...]\n for (( exp1; exp2; exp3 )); do COMMANDS; done                             until COMMANDS; do COMMANDS; done\n function name { COMMANDS ; } or name () { COMMANDS ; }                    variables - Names and meanings of some shell variables\n getopts optstring name [arg ...]                                          wait [-fn] [-p var] [id ...]\n hash [-lr] [-p pathname] [-dt] [name ...]                                 while COMMANDS; do COMMANDS; done\n help [-dms] [pattern ...]                                                 { COMMANDS ; }"
